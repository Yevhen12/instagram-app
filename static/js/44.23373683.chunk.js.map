{"version":3,"file":"static/js/44.23373683.chunk.js","mappings":"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","sources":["hooks/useSuggestions.js","pages/Dashboard/DashboardTypes/Main/Sidebar/UserSuggestion.js","pages/Dashboard/DashboardTypes/Main/Sidebar/UserSkeleton.js","pages/Dashboard/DashboardTypes/Main/Sidebar/Sidebar.js","pages/Dashboard/DashboardTypes/Main/Timeline/Posts/OneComment.js","pages/Dashboard/DashboardTypes/Main/Timeline/Posts/Post.js","pages/Dashboard/DashboardTypes/Main/Timeline/Timeline.js","pages/Dashboard/DashboardTypes/Main/Main.js","pages/Dashboard/Dashboard.js","components/Suggestions/UserSuggest.js","components/Suggestions/Suggestions.js","pages/Dashboard/DashboardTypes/Suggestion/Suggestion.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { doc, collection, getDocs, getDoc } from \"firebase/firestore\"\r\nimport { db } from \"../firebase/firebase\"\r\n\r\nconst useSuggestions = () => {\r\n\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n    const [currentUserInfo, setCurrenUserInfo] = useState()\r\n\r\n    const getCurrenUser = async () => {\r\n        const userRef = doc(db, 'users', userRedux.uid)\r\n\r\n        const userSnap = await getDoc(userRef)\r\n\r\n        setCurrenUserInfo(userSnap.data())\r\n    }\r\n\r\n    const fetchUsers = async (usersLength) => {\r\n        await getCurrenUser()\r\n        const usersRef = collection(db, \"users\");\r\n\r\n        const usersSnap = await getDocs(usersRef)\r\n        console.log(usersSnap.docs)\r\n        const arrayAllUsers = usersSnap.docs.map(elem => elem.data())\r\n        const mapedUsersSnap = arrayAllUsers.filter(elem => elem.uid !== userRedux.uid && userRedux.following.every(followUser => followUser.uid !== elem.uid))\r\n            .slice(0, usersLength).sort(() => 0.5 - Math.random())\r\n\r\n        return mapedUsersSnap\r\n    }\r\n\r\n    return { fetchUsers }\r\n}\r\n\r\nexport default useSuggestions","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from '../../../../../constants/pagesLinks'\r\nimport { useSelector } from \"react-redux\";\r\nimport useFollow from \"../../../../../hooks/useFollow\";\r\nimport UnfollowModal from \"../../../../../components/Modals/UnfollowModal\";\r\nimport ReusebleModal from \"../../../../../components/Modals/ReusebleModal\";\r\n\r\nconst UserSuggestion = ({ displayName, name, uid, imageUrl }) => {\r\n\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const { hendleFollow } = useFollow({ displayName, uid, imageUrl, name })\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n\r\n    const isUserFollowing = userRedux.following && userRedux.following.find(elem => elem.displayName === displayName)\r\n\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center w-full my-2\">\r\n            <Link to={ROUTES.HOME + displayName}>\r\n                <div className=\"rounded-full w-[32px] mr-3\">\r\n                    <img alt=\"userImage\" src={`${imageUrl ? imageUrl : process.env.PUBLIC_URL + '/images/standart-profile.png'}`} className='h-[32px] object-cover' />\r\n                </div>\r\n            </Link>\r\n            <div className=\"flex flex-col w-full\">\r\n                <Link to={ROUTES.HOME + displayName}>\r\n                    <p className=\"text-sm font-semibold \">{displayName}</p>\r\n                </Link>\r\n                <p className=\"text-[10px] text-gray-500/80 tracking-wide\">Suggested for you</p>\r\n            </div>\r\n\r\n            {\r\n                isUserFollowing ?\r\n                    (\r\n                        <>\r\n                            <button type=\"button\" onClick={() => setActiveModal(true)} className=\"active:opacity-60 text-xs font-semibold px-3\">Following</button>\r\n                            <ReusebleModal\r\n                                activeModal={activeModal}\r\n                                setActiveModal={setActiveModal}\r\n                                styleForContainerBlock='fixed w-screen h-screen top-0 left-0 right-0 flex justify-center items-center z-10 cursor-default bg-black/60 duration-300'\r\n                            >\r\n                                <UnfollowModal\r\n                                    activeModal={activeModal}\r\n                                    imageUrl={imageUrl}\r\n                                    displayName={displayName}\r\n                                    name={name}\r\n                                    uid={uid}\r\n                                    setActiveModal={setActiveModal}\r\n                                />\r\n                            </ReusebleModal>\r\n                        </>\r\n\r\n                    )\r\n                    :\r\n                    (\r\n                        <button type=\"button\" onClick={() => hendleFollow()} className='active:opacity-60 text-xs text-[#0195f6] font-semibold px-3'>Follow</button>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserSuggestion)","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst UserSkeleton = () => {\r\n    return (\r\n        <div className=\"flex items-center my-2 h-[35px]\">\r\n            <div>\r\n                <Skeleton circle width={32} height={32} />\r\n            </div>\r\n            <div className=\"w-full h-full\">\r\n                <Skeleton width={100} height={6} count={2} containerClassName='flex flex-col mt-2.5 ml-3' className=\"mb-2\" />\r\n            </div>\r\n            <div className=\"h-full\">\r\n                <Skeleton height={8} width={40} className='mr-3 mt-2' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserSkeleton)","import React, { useEffect, useState, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport useSuggestions from '../../../../../hooks/useSuggestions'\r\nimport UserSuggestion from './UserSuggestion'\r\nimport UserSkeleton from './UserSkeleton'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport SwitchModal from '../../../../../components/Modals/SwitchModal'\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\n\r\nconst Sidebar = () => {\r\n    const { fetchUsers } = useSuggestions()\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const USERS_TO_FETCH = 5\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        const getSuggestions = async () => {\r\n            const users = await fetchUsers(USERS_TO_FETCH)\r\n            setSuggestions(users)\r\n            setIsLoading(false)\r\n        }\r\n\r\n        getSuggestions()\r\n    }, [])\r\n\r\n    const skeletonUsers = Array(USERS_TO_FETCH).fill(0).map((_, idx) => <UserSkeleton key={idx} />)\r\n\r\n    const mappedSuggestions = useMemo(() => suggestions.map(elem => <UserSuggestion key={elem.uid} {...elem} />), [suggestions])\r\n\r\n\r\n    return (\r\n        <>\r\n            <aside className='max-w-[330px] w-full mt-5'>\r\n                <div className='w-full'>\r\n                    <div className='w-full flex justify-between items-center'>\r\n                        <div className='rounded-full min-w-[56px] mr-4 overflow-hidden'>\r\n                            <img alt='userPhoto' src={`${userRedux.imageUrl ? userRedux.imageUrl : process.env.PUBLIC_URL + '/images/standart-profile.png'}`} className='h-[56px] w-[56px] object-cover' />\r\n                        </div>\r\n                        <div className='flex flex-col w-full'>\r\n                            <p className='font-semibold text-sm'>{userRedux.displayName}</p>\r\n                            <p className='text-sm text-gray-500/70'>{userRedux.name}</p>\r\n                        </div>\r\n                        <button onClick={() => setActiveModal(true)} type='button' className='text-xs font-semibold text-[#0195f6]'>\r\n                            Switch\r\n                        </button>\r\n                    </div>\r\n                    <div className='flex justify-between mt-4'>\r\n                        <p className='text-gray-500 font-semibold text-sm '>Suggestions For You</p>\r\n                        <button className='text-xs' type='button' onClick={() => navigate('/people')}>See All</button>\r\n                    </div>\r\n                    <div className='flex flex-col mt-3'>\r\n                        {isLoading ? skeletonUsers : mappedSuggestions}\r\n                    </div>\r\n                    <p className='text-gray-500/70 text-xs mt-5'>© 2022 INSTAGRAN FROM META</p>\r\n                </div>\r\n            </aside>\r\n            <SwitchModal\r\n                activeModal={activeModal}\r\n                setActiveModal={setActiveModal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Sidebar)","import React, { useEffect, useState } from \"react\";\r\nimport * as ROUTES from '../../../../../../constants/pagesLinks'\r\nimport { Link } from \"react-router-dom\";\r\nimport LikeComment from \"../../../../../Profile/ProfilePages/Post/Comment/LikeComment\";\r\n\r\nconst OneComment = ({ post, updatedCurrentPost, setUpdatedCurrentPost }) => {\r\n\r\n    const [active, setActive] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (updatedCurrentPost) setActive(true)\r\n    }, [updatedCurrentPost])\r\n    \r\n    return (\r\n        <div className=\"flex flex-row px-3 mt-2 w-full\">\r\n            <p style={{ wordWrap: \"break-word\" }} className=\"text-sm font-semibold mr-2 hover:underline\">\r\n                <Link to={`${ROUTES.HOME}${post.user.displayName}`}>\r\n                    {post.user.displayName}\r\n                </Link>\r\n            </p>\r\n            <p className=\"text-sm w-full\">{post.comments[post.comments.length - 1].text}</p>\r\n            {active &&\r\n                <LikeComment\r\n                    postComment={post.comments[post.comments.length - 1]}\r\n                    updatedCurrentPost={updatedCurrentPost && updatedCurrentPost}\r\n                    setUpdatedCurrentPost={setUpdatedCurrentPost}\r\n                />\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(OneComment)","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport * as ROUTES from '../../../../../../constants/pagesLinks'\r\nimport LikePost from \"../../../../../Profile/ProfilePages/Post/Bars/LikePost/LikePost\";\r\nimport SharePost from \"../../../../../Profile/ProfilePages/Post/Bars/SharePost/SharePost\";\r\nimport SavePost from \"../../../../../Profile/ProfilePages/Post/Bars/SavePost/SavePost\";\r\nimport LikesModal from \"../../../../../Profile/ProfilePages/Post/Modals/LikesModal\";\r\nimport WriteComment from \"../../../../../Profile/ProfilePages/Post/Comment/WriteComment\";\r\nimport convertUnixTime from \"../../../../../../helpers/converUnixTime\";\r\nimport OneComment from \"./OneComment\";\r\n\r\nconst Post = ({ post  }) => {\r\n    const [updatedCurrentPost, setUpdatedCurrentPost] = useState(post)\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const [showPicker, setShowPicker] = useState(false)\r\n    const [textComment, setTextComment] = useState('')\r\n    const [allComments, setAllComments] = useState([])\r\n\r\n    const commentRef = useRef(null)\r\n    const location = useLocation()\r\n    const isSavedPostArray = location.pathname.split('/').includes('saved')\r\n    const navigate = useNavigate()\r\n\r\n    let postTime = convertUnixTime(post.uid).split(' ')\r\n\r\n\r\n    if (Number(postTime[0]) == 1) {\r\n        postTime[1] = postTime[1].split('').slice(0, -1).join('')\r\n        postTime = postTime.join(' ')\r\n    } else {\r\n        postTime = postTime.join(' ')\r\n    }\r\n\r\n    const pickerStyle = {\r\n        width: '310px',\r\n        position: \"absolute\",\r\n        top: '-320px',\r\n        left: '-12px',\r\n        zIndex: '21'\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setAllComments(updatedCurrentPost.comments)\r\n    }, [updatedCurrentPost])\r\n\r\n    const navigateToPost = () => {\r\n        navigate(`dashboard/${updatedCurrentPost.user.displayName}/${updatedCurrentPost.uid}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"flex flex-col max-w-[470px] w-full rounded-md bg-white my-2 border\">\r\n            <div className=\"w-full flex p-3 items-center\">\r\n                <Link to={ROUTES.HOME + post.user.displayName}>\r\n                    <div className=\"rounded-full h-[32px] w-[32px] mr-3 overflow-hidden\">\r\n                        <img alt=\"userPhoto\" src={post.user.imageUrl ? post.user.imageUrl : process.env.PUBLIC_URL + '/images/standart-profile.png'} className=\"h-[32px] object-cover\" />\r\n                    </div>\r\n                </Link>\r\n                <div>\r\n                    <Link to={ROUTES.HOME + post.user.displayName}>\r\n                        <p className=\"text-sm font-semibold\">{post.user?.displayName}</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full min-h-[470px] max-h-[600px] bg-black flex items-center\">\r\n                <img className=\"w-full min-h-[470px] max-h-[600px] object-contain\" alt=\"postPhoto\" src={post.image} />\r\n            </div>\r\n\r\n            <div className=\"flex justify-between p-3\">\r\n                <div className=\"flex items-center\">\r\n                    <LikePost\r\n                        updatedCurrentPost={updatedCurrentPost}\r\n                        setUpdatedCurrentPost={setUpdatedCurrentPost}\r\n                    />\r\n\r\n                    <img alt=\"comment\" src={process.env.PUBLIC_URL + \"/images/comment-icon.png\"} className=\"h-[22px] w-[22px] mr-5 cursor-pointer hover:opacity-50\" onClick={() => commentRef.current.focus()} />\r\n                    <SharePost\r\n                        updatedCurrentPost={updatedCurrentPost}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n                    <SavePost\r\n                        updatedCurrentPost={updatedCurrentPost}\r\n                        currentPost={post}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                updatedCurrentPost.likes && updatedCurrentPost.likes.length > 0 ?\r\n                    (\r\n                        <>\r\n                            <p type=\"button\" className=\"font-semibold text-sm border-none m-0 px-3 cursor-pointer\" onClick={() => setActiveModal(true)}>{updatedCurrentPost.likes && updatedCurrentPost.likes.length} like</p>\r\n                            <LikesModal\r\n                                activeModal={activeModal}\r\n                                setActiveModal={setActiveModal}\r\n                                likes={updatedCurrentPost.likes && updatedCurrentPost.likes}\r\n                            />\r\n                        </>\r\n                    )\r\n                    :\r\n                    (\r\n                        <p className=\"text-sm px-3\">Be the first to <span className=\"font-semibold text-sm\">like this</span></p>\r\n                    )\r\n            }\r\n            {\r\n                post.text.length > 0 &&\r\n                (\r\n                    <div className=\"flex flex-row px-3 mt-2\">\r\n                        <p className=\"text-sm font-semibold mr-2 hover:underline\">\r\n                            <Link to={`${post.user.displayName}`}>\r\n                                {post.user.displayName}\r\n                            </Link>\r\n                        </p>\r\n                        <p className=\"text-sm\">{post.text}</p>\r\n\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {\r\n                allComments.length === 1 && allComments.length !== 0 ?\r\n                    (\r\n                        <OneComment post={updatedCurrentPost && updatedCurrentPost} updatedCurrentPost = {updatedCurrentPost && updatedCurrentPost} setUpdatedCurrentPost = {setUpdatedCurrentPost}/>\r\n                    )\r\n                    :\r\n                    \r\n                    (\r\n                        allComments.length > 1 &&\r\n                        <div className=\"mt-2\">\r\n                            <button type=\"button\" onClick={() => navigateToPost()}>\r\n                                    <p className=\"text-sm text-gray-500/70 mx-3\">View all {updatedCurrentPost.comments.length} comments</p>\r\n                            </button>\r\n                            <OneComment post={updatedCurrentPost && updatedCurrentPost} updatedCurrentPost = {updatedCurrentPost && updatedCurrentPost} setUpdatedCurrentPost = {setUpdatedCurrentPost}/>\r\n                        </div>\r\n                    )\r\n            }\r\n            <p className=\"text-[10px] mt-2 text-black/60 px-3 mb-3\">{postTime.toUpperCase()} {postTime.toLowerCase() === ' now' ? '' : ' AGO'}</p>\r\n            <div className=\"w-full px-3 border-t\">\r\n                <WriteComment\r\n                    textComment={textComment}\r\n                    setTextComment={setTextComment}\r\n                    setShowPicker={setShowPicker}\r\n                    showPicker={showPicker}\r\n                    commentRef={commentRef}\r\n                    updatedCurrentPost={updatedCurrentPost}\r\n                    isCurrentPostSaved={isSavedPostArray ? true : false}\r\n                    setUpdatedCurrentPost={setUpdatedCurrentPost}\r\n                    pickerStyle={pickerStyle}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(Post)","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Post from './Posts/Post'\r\nimport { Outlet } from 'react-router-dom'\r\nimport Loading from '../../../../../components/Loaders/Loaging'\r\nimport { db } from '../../../../../firebase/firebase'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nconst Timeline = () => {\r\n\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n    const [allPosts, setAllPosts] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const wrapper = async () => {\r\n            setIsLoading(true)\r\n            const getAllPosts = async () => {\r\n                const refUser = doc(db, 'users', userRedux.uid)\r\n                const docUser = await getDoc(refUser)\r\n\r\n                const userData = docUser.data()\r\n                userData.following.forEach(async (user) => {\r\n                    const docUserFollowing = doc(db, \"users\", user.uid);\r\n                    const docSnap = await getDoc(docUserFollowing);\r\n                    const followingUser = docSnap.data()\r\n\r\n                    setAllPosts(prevAllPosts => [...prevAllPosts, ...followingUser.posts])\r\n                });\r\n            }\r\n            await getAllPosts()\r\n            setIsLoading(false)\r\n        }\r\n\r\n        wrapper()\r\n\r\n\r\n    }, [])\r\n\r\n    const mapedAllPosts = useMemo(() => allPosts.sort((a, b) => b.uid - a.uid).map(elem => <Post key={elem.uid} post={elem} />), [allPosts])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    (\r\n                        <div className='w-[470px] mr-10 h-full flex items-center justify-center h-[calc(100vh-65px)]'>\r\n                            <Loading height={70} width={70} />\r\n                        </div>\r\n                    )\r\n                    :\r\n                    (\r\n                        <section className='max-w-[470px] w-full md:mr-10'>\r\n                            <div className='w-full'>\r\n                                <ul className='flex flex-col'>\r\n                                    {mapedAllPosts}\r\n                                    <Outlet context={{ posts: allPosts }} />\r\n                                </ul>\r\n                            </div>\r\n                        </section>\r\n                    )\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Timeline)","import React from 'react'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Timeline from './Timeline/Timeline'\r\nimport useWindowWidth from '../../../../hooks/useWindowWidth'\r\n\r\n\r\nconst Main = () => {\r\n    const windowWidth = useWindowWidth()\r\n    return (\r\n        <div className='flex justify-center mt-7 px-3'>\r\n            <Timeline />\r\n            {\r\n                windowWidth.innerWidth > 768 ?\r\n                    (\r\n                        <Sidebar />\r\n                    )\r\n                    : null\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Main)","import React, { useEffect, useState } from \"react\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Suggestion from './DashboardTypes/Suggestion/Suggestion'\r\nimport * as ROUTES from '../../constants/pagesLinks'\r\nimport Main from \"./DashboardTypes/Main/Main\";\r\nimport { getDoc, doc } from \"firebase/firestore\";\r\nimport { auth, db } from \"../../firebase/firebase\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [allPosts, setAllPosts] = useState([])\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n    const [isSuggestions, setIsSuggestions] = useState(false)\r\n    console.log(userRedux)\r\n\r\n    useEffect(() => {\r\n        if (auth.currentUser) {\r\n            setAllPosts([])\r\n            const getAllPosts = () => {\r\n                userRedux.following.forEach(async (user) => {\r\n                    const docUser = doc(db, \"users\", user.uid);\r\n                    const docSnap = await getDoc(docUser);\r\n                    const followingUser = docSnap.data()\r\n                    setAllPosts(prevAllPosts => [...prevAllPosts, ...followingUser.posts])\r\n                });\r\n                if (!userRedux.following.length) setIsSuggestions(true)\r\n            }\r\n\r\n            getAllPosts()\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"bg-[#fafafa]\">\r\n            {!auth.currentUser && <Navigate to={ROUTES.SIGN_IN} />}\r\n            <Header />\r\n\r\n            {isSuggestions ?\r\n                (\r\n                    <Suggestion />\r\n                )\r\n                :\r\n                (\r\n                    <main role=\"main\">\r\n                        <Main />\r\n                    </main>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Dashboard)","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from '../../constants/pagesLinks'\r\nimport { useSelector } from \"react-redux\";\r\nimport useFollow from \"../../hooks/useFollow\";\r\nimport UnfollowModal from \"../Modals/UnfollowModal\";\r\nimport ReusebleModal from \"../Modals/ReusebleModal\";\r\n\r\nconst UserSuggest = ({ displayName, uid, imageUrl, name }) => {\r\n\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const { hendleFollow } = useFollow({ displayName, uid, imageUrl, name })\r\n    const userRedux = useSelector(state => state.userReducer.user)\r\n\r\n    const isUserFollowing = userRedux.following && userRedux.following.find(elem => elem.displayName === displayName)\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center w-full px-5 py-1.5\">\r\n            <Link to={ROUTES.HOME + displayName}>\r\n                <div className=\"rounded-full w-[44px] mr-4 overflow-hidden\">\r\n                    <img alt=\"userImage\" src={`${imageUrl ? imageUrl : process.env.PUBLIC_URL + '/images/standart-profile.png'}`} className='h-[44px] object-cover' />\r\n                </div>\r\n            </Link>\r\n            <div className=\"flex flex-col w-full\">\r\n                <Link to={ROUTES.HOME + displayName}>\r\n                    <p className=\"text-sm font-semibold \">{displayName}</p>\r\n                </Link>\r\n                <p className=\"text-sm text-gray-500/80\">{name}</p>\r\n                <p className=\"text-[10px] text-gray-500/80\">Suggested for you</p>\r\n            </div>\r\n\r\n            {\r\n                isUserFollowing ?\r\n                    (\r\n                        <>\r\n                            <button type=\"button\" onClick={() => setActiveModal(true)} className=\"active:opacity-60 text-sm font-semibold border px-3.5 py-1\">Following</button>\r\n                            <ReusebleModal\r\n                                activeModal={activeModal}\r\n                                setActiveModal={setActiveModal}\r\n                                styleForContainerBlock='fixed w-screen h-screen top-0 left-0 right-0 flex justify-center items-center z-10 cursor-default bg-black/60 duration-300'\r\n                            >\r\n                                <UnfollowModal\r\n                                    activeModal={activeModal}\r\n                                    imageUrl={imageUrl}\r\n                                    displayName={displayName}\r\n                                    name={name}\r\n                                    uid={uid}\r\n                                    setActiveModal={setActiveModal}\r\n                                />\r\n                            </ReusebleModal>\r\n                        </>\r\n\r\n                    )\r\n                    :\r\n                    (\r\n                        <button type=\"button\" onClick={() => hendleFollow()} className='active:opacity-60 text-white text-sm px-6 py-1.5 bg-[#0195f6] rounded font-semibold'>Follow</button>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(UserSuggest)","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport UserSuggest from \"./UserSuggest\";\r\nimport useSuggestions from \"../../hooks/useSuggestions\";\r\n\r\nconst Suggestions = () => {\r\n    const [suggestions, setSuggestions] = useState([])\r\n    const { fetchUsers } = useSuggestions()\r\n\r\n    const USERS_TO_FETCH = 35\r\n\r\n    useEffect(() => {\r\n\r\n        const getSuggestions = async () => {\r\n            const users = await fetchUsers(USERS_TO_FETCH)\r\n            setSuggestions(users)\r\n        }\r\n\r\n        getSuggestions()\r\n    }, [])\r\n\r\n    const mapedSuggestions = useMemo(() => suggestions.map(elem => <UserSuggest key={elem.uid} {...elem} />), [suggestions])\r\n\r\n    return (\r\n        <div className=\"max-w-[600px] w-full bg-whiteflex flex-col items-center border mt-3 py-3 rounded\">\r\n            {mapedSuggestions}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Suggestions)","import React from 'react'\r\nimport Suggestions from '../../../../components/Suggestions/Suggestions'\r\n\r\nconst Suggestion = () => {\r\n\r\n    return (\r\n        <section className=\"flex flex-col items-center px-2\">\r\n            <div className=\"max-w-[600px] w-full mt-5\">\r\n                <p className=\"font-semibold\">Suggestions For You</p>\r\n            </div>\r\n            <Suggestions />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default React.memo(Suggestion)","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["userRedux","useSelector","state","userReducer","user","useState","setCurrenUserInfo","getCurrenUser","userRef","doc","db","uid","getDoc","userSnap","data","fetchUsers","usersLength","usersRef","collection","getDocs","usersSnap","console","log","docs","arrayAllUsers","map","elem","mapedUsersSnap","filter","following","every","followUser","slice","sort","Math","random","UserSuggestion","displayName","name","imageUrl","activeModal","setActiveModal","hendleFollow","useFollow","isUserFollowing","find","className","to","ROUTES","alt","src","process","type","onClick","ReusebleModal","styleForContainerBlock","UnfollowModal","React","UserSkeleton","circle","width","height","count","containerClassName","Sidebar","useSuggestions","suggestions","setSuggestions","isLoading","setIsLoading","navigate","useNavigate","useEffect","getSuggestions","users","skeletonUsers","Array","fill","_","idx","mappedSuggestions","useMemo","SwitchModal","OneComment","post","updatedCurrentPost","setUpdatedCurrentPost","active","setActive","style","wordWrap","comments","length","text","LikeComment","postComment","Post","showPicker","setShowPicker","textComment","setTextComment","allComments","setAllComments","commentRef","useRef","isSavedPostArray","useLocation","pathname","split","includes","postTime","convertUnixTime","Number","join","image","LikePost","current","focus","SharePost","SavePost","currentPost","likes","LikesModal","toUpperCase","toLowerCase","WriteComment","isCurrentPostSaved","pickerStyle","position","top","left","zIndex","Timeline","allPosts","setAllPosts","wrapper","getAllPosts","refUser","docUser","forEach","docUserFollowing","docSnap","followingUser","prevAllPosts","posts","mapedAllPosts","a","b","context","Main","windowWidth","useWindowWidth","innerWidth","Dashboard","isSuggestions","setIsSuggestions","auth","Header","Suggestion","role","UserSuggest","Suggestions","mapedSuggestions","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","SkeletonThemeContext","Skeleton","_a","_b","_c","Wrapper","customClassName","containerTestId","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}