{"version":3,"file":"static/js/847.a30200fc.chunk.js","mappings":"mPAOMA,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAEhC,GAAgCC,EAAAA,EAAAA,UAC5B,CACIC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,SAAU,KALlB,eAAOC,EAAP,KAAiBC,EAAjB,KAQA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAa,SAACC,GAChB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACdR,GAAY,SAAAS,GACR,OAAO,QAAC,UAEGA,GAFX,cAGSb,EAAOY,QAqClBE,EAAa,YACfC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UAClBC,MAAK,SAAAC,GACFA,EAAMC,SAAQ,SAAAC,GACV,IAAMC,EAAmBD,EAAKE,OAAOtB,MACrCuB,QAAQC,IAAIH,GACRnB,EAASF,QAAUqB,IACnBE,QAAQC,IAAI,6BACXnB,GAAS,GACTkB,QAAQC,IAAIpB,WAO3BqB,GAAarB,GAASF,EAASJ,aAAeI,EAASH,MAAQG,EAASF,OAASE,EAASD,SAASyB,OAAS,EAElH,OACI,gBAAKC,UAAU,8CAAf,UACI,iBAAKA,UAAU,gBAAf,WACI,iBAAKA,UAAU,sDAAf,WACI,gBAAKA,UAAU,6BAAf,UACI,gBAAKC,IAAKC,sCAAkDF,UAAU,sBAGzEvB,IAAS,eAAGuB,UAAU,4BAAb,cAA2CvB,MACrD,kBAAM0B,OAAO,OAAb,WACI,kBACI/B,KAAK,cACLY,MAAOT,EAASJ,YAChBiC,KAAK,OACLJ,UAAU,6DACVK,YAAY,WACZC,SAAU,SAACxB,GAAD,OAAOD,EAAWC,OAEhC,kBACIV,KAAK,OACLY,MAAOT,EAASH,KAChBgC,KAAK,OACLJ,UAAU,6DACVK,YAAY,OACZC,SAAU,SAACxB,GAAD,OAAOD,EAAWC,OAEhC,kBACIV,KAAK,QACLY,MAAOT,EAASF,MAChB+B,KAAK,QACLJ,UAAU,6DACVK,YAAY,gBACZC,SAAU,SAACxB,GAAD,OAAOD,EAAWC,OAEhC,kBACIV,KAAK,WACLY,MAAOT,EAASD,SAChB8B,KAAK,WACLJ,UAAU,6DACVK,YAAY,WACZC,SAAU,SAACxB,GAAD,OAAOD,EAAWC,OAEhC,mBACIyB,UAAWT,EACXU,QAAS,SAAC1B,GAAD,OA7FhB,SAACA,GAEd,GADAI,IACKT,EAkBDD,GAAY,SAAAS,GACR,OAAO,QAAC,UAEGA,GAFX,IAGQZ,MAAO,YAtBX,CACRS,EAAE2B,iBAEF,IAAQtC,EAAuCI,EAAvCJ,YAAaC,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAElCN,GAAY,SAAA0C,GACR,OAAO,QAAC,UAEGA,GAFX,IAGQvC,YAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,SAAAA,OAIZL,EAAQ,IA2EwB0C,CAAS7B,IACzBsB,KAAK,SACLJ,UAAS,sDAAiDF,EAAY,6BAA+B,kCAJzG,4BAUR,iBAAKE,UAAU,qDAAf,WACI,cAAGA,UAAU,OAAb,uCAGA,mBAAQA,UAAU,YAAYI,KAAK,SAASI,QAAS,kBAAM7B,EAASiC,EAAAA,KAApE,8BASpB,EAAeC,EAAAA,KAAW9C,G,oBC7IpB+C,EAAe,SAAC,GAAwC,IAAtC9C,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,QACjC,GADyD,EAAf8C,UACV7C,EAAAA,EAAAA,UAC5B,CACI8C,MAAO,GACPC,IAAK,GACLC,KAAM,MAJd,eAAOC,EAAP,KAAiBC,EAAjB,KAOA,GAAsClD,EAAAA,EAAAA,WAAS,GAA/C,eAAOmD,EAAP,KAAoBC,EAApB,KACMxB,EAAYqB,EAASD,MAASC,EAASD,KAAO,KAG9CrC,EAAa,SAACC,GAChB,MAAyBA,EAAEC,OAAnBwC,EAAR,EAAQA,MAAOvC,EAAf,EAAeA,MACfoC,GAAY,SAAAI,GACR,OAAO,QAAC,UAEGA,GAFX,cAGSD,EAAQvC,QAOnBL,GAAWC,EAAAA,EAAAA,MA8BX6C,GAAYC,EAAAA,EAAAA,cAAY,WAC1BJ,GAAe,KAChB,IAGGK,EAAmB,iKACnBC,EAAoB,CACtBC,WAAY,OACZC,gBAAgB,gCAChBC,eAAgB,YAChBC,iBAAkB,YAClBC,mBAAoB,qBACpBC,QAAS,MACTC,SAAU,QAGRC,EAAc,CAAC,UAAW,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5HC,EAAuC,YAAnBlB,EAASH,OAA0C,UAAnBG,EAASH,OAAwC,QAAnBG,EAASH,OAC1E,SAAnBG,EAASH,OAAuC,WAAnBG,EAASH,OAAyC,YAAnBG,EAASH,OAA0C,aAAnBG,EAASH,MAAwB,GACzG,UAAnBG,EAASH,OAAwC,SAAnBG,EAASH,OAAuC,cAAnBG,EAASH,OAA4C,aAAnBG,EAASH,MAAwB,GAAQG,EAASD,KAAO,EAAU,GAAL,GAE1JoB,EAAyBC,MAAMC,KAAK,CAAEzC,OAAQsC,IAAoB,SAACI,EAAGC,GAAJ,OAAUA,EAAI,KAChFC,EAAeJ,MAAMC,KAAK,CAAEzC,OAAQ,MAAO,SAAC0C,EAAGC,GAAJ,OAAU,KAAOA,KAI5DE,GAAiBC,EAAAA,EAAAA,UAAQ,kBAAMT,EAAYU,KAAI,SAAAC,GAAI,OAAI,mBAAuB/C,UAAU,mBAAmBhB,MAAO+D,EAAMC,UAAQ,EAACzB,MAAOwB,EAAjF,SAAwFA,IAA3EE,EAAAA,EAAAA,YAA4F,CAACb,IACjKc,GAAeL,EAAAA,EAAAA,UAAQ,kBAAMP,EAAuBQ,KAAI,SAAAC,GAAI,OAAI,mBAAuB/C,UAAU,mBAAmBgD,UAAQ,EAAChE,MAAO+D,EAAMxB,MAAOwB,EAAjF,SAAwFA,IAA3EE,EAAAA,EAAAA,YAA4F,CAACX,IAC1Ka,GAAgBN,EAAAA,EAAAA,UAAQ,kBAAMF,EAAaG,KAAI,SAAAC,GAAI,OAAI,mBAAuB/C,UAAU,mBAAmBgD,UAAQ,EAAChE,MAAO+D,EAAMxB,MAAOwB,EAAjF,SAAwFA,IAA3EE,EAAAA,EAAAA,YAA4F,CAACN,IACvK,OACI,gBAAK3C,UAAU,8CAAf,UACI,iBAAKA,UAAU,gBAAf,WACI,iBAAKA,UAAU,sDAAf,WACI,gBAAKA,UAAU,6BAAf,UACI,gBAAKC,IAAKC,0CAAsDF,UAAU,uBAE9E,cAAGA,UAAU,+BAAb,mCACA,cAAGA,UAAU,sBAAb,6EACA,cACIA,UAAU,uDACVQ,QAASiB,EAFb,qDAMA,UAAC2B,EAAA,EAAD,CACI/B,YAAaA,EACbC,eAAgBA,EAChB+B,UAAU,YACVC,WAAa,0CAJjB,WAMI,gBAAKrD,IAAKC,0CAAsDF,UAAU,qCAC1E,cAAGA,UAAU,oCAAb,qCACA,cAAGA,UAAU,sCAAb,uOAcJ,kBAAMG,OAAO,OAAOH,UAAU,SAA9B,WACI,iBAAKA,UAAU,6BAAf,WACI,mBAAQuD,MAAO3B,EAAmB5B,UAAS,UAAK2B,EAAL,cAAmC3C,MAAOmC,EAASH,MAAOO,MAAM,QAAQjB,SAAU,SAACxB,GAAD,OAAOD,EAAWC,IAA/I,SACK8D,KAEL,mBAAQW,MAAO3B,EAAmB5B,UAAS,UAAK2B,EAAL,cAAmC3C,MAAOmC,EAASF,IAAKM,MAAM,MAAMjB,SAAU,SAACxB,GAAD,OAAOD,EAAWC,IAA3I,SACKoE,KAEL,mBAAQK,MAAO3B,EAAmB5B,UAAS,UAAK2B,EAAL,eAAoC3C,MAAOmC,EAASD,KAAMK,MAAM,OAAOjB,SAAU,SAACxB,GAAD,OAAOD,EAAWC,IAA9I,SACKqE,QAIPrD,IAAa,cAAGE,UAAU,0CAAb,gCAEf,cAAGA,UAAU,0CAAb,sFACA,mBACIO,UAAWT,EACXU,QAAS,SAAC1B,GAAD,OAhHhB,SAACA,GACdA,EAAE2B,iBAEF,IAAQO,EAAqBG,EAArBH,MAAOC,EAAcE,EAAdF,IAAKC,EAASC,EAATD,KAEpBlD,GAAY,SAAA0C,GACR,OAAO,QAAC,UAEGA,GAFX,IAGQS,SAAU,CACNH,MAAOA,GAAgB,UACvBC,IAAMA,GAAY,EAClBC,KAAMA,GAAc,MAExBsC,SAAU,QAItBvF,EAAQ,GA8F4B0C,CAAS7B,IACzBsB,KAAK,SACLJ,UAAS,sDAAiDF,EAAY,6BAA+B,kCAJzG,mBAQA,gBAAKE,UAAU,sBAAf,UACI,mBACIQ,QAAS,SAAC1B,GAAD,OAlGpB,SAACA,GACdA,EAAE2B,iBACFb,QAAQC,IAAI,GACZ5B,GAAQ,SAAAwF,GAAQ,OAAIA,EAAW,KA+FSA,CAAS3E,IACzBsB,KAAK,SACLJ,UAAU,kDAHd,2BAUZ,iBAAKA,UAAU,qDAAf,WACI,cAAGA,UAAU,OAAb,uCAGA,mBAAQA,UAAU,YAAYI,KAAK,SAASI,QAAS,kBAAM7B,EAASiC,EAAAA,KAApE,6BASpB,EAAeC,EAAAA,KAAWC,G,SCvKpB4C,EAAS,WAEX,OAAgCxF,EAAAA,EAAAA,UAAS,IAAzC,eAAO6C,EAAP,KAAiB/C,EAAjB,KACA,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAOyF,EAAP,KAAa1F,EAAb,KACMU,GAAWC,EAAAA,EAAAA,MA6BjB,OACI,gCACc,IAAT+E,IACG,SAAC,EAAD,CACI3F,YAAaA,EACbC,QAASA,IAGP,IAAT0F,IACG,SAAC,EAAD,CACI3F,YAAaA,EACbC,QAASA,IAGP,IAAT0F,IACG,SAAC,EAAD,CACI3F,YAAaA,EACbC,QAASA,EACT8C,SAAUA,IAGR,IAAT4C,GA/CM,WACX,IAAQtF,EAAoB0C,EAApB1C,MAAOC,EAAayC,EAAbzC,UACfsF,EAAAA,EAAAA,IAA+BC,EAAAA,GAAMxF,EAAOC,GACvCgB,MAAK,WACF,IAAMwE,EAAcD,EAAAA,GAAAA,YACdE,GAAUC,EAAAA,EAAAA,IAAI3E,EAAAA,GAAI,QAASyE,EAAYG,KACvCC,GAAO,kBACNnD,GADM,IAETkD,IAAKH,EAAYG,IACjBE,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,mBAAoB,GACpBC,WAAY,GACZC,YAAa,MAEjBC,EAAAA,EAAAA,IAAOV,EAASG,GAChBvF,EAAS,eAEZ+F,OAAM,SAAAC,GACH/E,QAAQC,IAAI8E,EAAUC,SACtBjG,EAAS,YACTV,EAAQ,MAyBG4G,OAK3B,EAAehE,EAAAA,KAAW6C","sources":["pages/SignUp/SignUpPages/SignUpFirst.js","pages/SignUp/SignUpPages/SignUpSecond.js","pages/SignUp/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as ROUTES from '../../../constants/pagesLinks'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getDocs, collection } from \"firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\n\r\n\r\nconst SignUpFirst = ({ setUserData, setPage }) => {\r\n\r\n    const [textForm, setTextForm] = useState(\r\n        {\r\n            displayName: '',\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n        }\r\n    )\r\n    const [error, setError] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const changeText = (e) => {\r\n        const { name, value } = e.target\r\n        setTextForm(prevTextForm => {\r\n            return (\r\n                {\r\n                    ...prevTextForm,\r\n                    [name]: value\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const nextPage = (e) => {\r\n        checkEmail()\r\n        if (!error) {\r\n            e.preventDefault()\r\n\r\n            const { displayName, name, email, password } = textForm\r\n\r\n            setUserData(prevUserData => {\r\n                return (\r\n                    {\r\n                        ...prevUserData,\r\n                        displayName,\r\n                        name,\r\n                        email,\r\n                        password\r\n                    }\r\n                )\r\n            })\r\n            setPage(1)\r\n        } else {\r\n            setTextForm(prevTextForm => {\r\n                return (\r\n                    {\r\n                        ...prevTextForm,\r\n                        email: ''\r\n                    }\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const checkEmail = () => {\r\n        getDocs(collection(db, \"users\"))\r\n            .then(users => {\r\n                users.forEach(user => {\r\n                    const emailCurrentUser = user.data().email\r\n                    console.log(emailCurrentUser)\r\n                    if (textForm.email === emailCurrentUser) {\r\n                        console.log(\"This email isnt available\")\r\n                         setError(true)\r\n                         console.log(error)\r\n                    }\r\n                })\r\n            })\r\n    }\r\n    \r\n\r\n    const isInvalid = !error && textForm.displayName && textForm.name && textForm.email && textForm.password.length > 6\r\n\r\n    return (\r\n        <div className=\"flex items-center mx-auto h-screen max-w-xs\">\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"flex flex-col p-7 items-center border bg-white mb-5\">\r\n                    <div className=\"flex justify-center w-full\">\r\n                        <img src={process.env.PUBLIC_URL + \"/images/instagram.png\"} className=\"mt-2 mb-4 w-2/4\" />\r\n                    </div>\r\n\r\n                    {error && <p className=\"text-sm text-red-500 mb-5\"> {error}</p>}\r\n                    <form method=\"POST\">\r\n                        <input\r\n                            name=\"displayName\"\r\n                            value={textForm.displayName}\r\n                            type=\"text\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-2 text-sm outline-none \"\r\n                            placeholder=\"Username\"\r\n                            onChange={(e) => changeText(e)}\r\n                        />\r\n                        <input\r\n                            name=\"name\"\r\n                            value={textForm.name}\r\n                            type=\"text\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-2 text-sm outline-none \"\r\n                            placeholder=\"Name\"\r\n                            onChange={(e) => changeText(e)}\r\n                        />\r\n                        <input\r\n                            name=\"email\"\r\n                            value={textForm.email}\r\n                            type=\"email\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-2 text-sm outline-none \"\r\n                            placeholder=\"Email address\"\r\n                            onChange={(e) => changeText(e)}\r\n                        />\r\n                        <input\r\n                            name=\"password\"\r\n                            value={textForm.password}\r\n                            type=\"password\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-5 text-sm outline-none \"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => changeText(e)}\r\n                        />\r\n                        <button\r\n                            disabled={!isInvalid}\r\n                            onClick={(e) => nextPage(e)}\r\n                            type=\"submit\"\r\n                            className={`text-white w-full rounded h-8 font-semibold ${isInvalid ? 'bg-blue-500 cursor-pointer' : 'bg-blue-200 cursor-not-allowed'}`}\r\n                        >\r\n                            Sign up\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"w-full border flex items-center justify-center p-5\">\r\n                    <p className=\"mr-1\">\r\n                        Already have an account?\r\n                    </p>\r\n                    <button className=\"font-bold\" type=\"button\" onClick={() => navigate(ROUTES.SIGN_IN)}> Log In</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(SignUpFirst)","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport * as ROUTES from '../../../constants/pagesLinks'\r\nimport { nanoid } from 'nanoid'\r\nimport Modal from \"../../../components/Modals/Modal\";\r\n\r\nconst SignUpSecond = ({ setUserData, setPage, userData }) => {\r\n    const [birthday, setBirthday] = useState(\r\n        {\r\n            month: '',\r\n            day: '',\r\n            year: '',\r\n        }\r\n    )\r\n    const [activeModal, setActiveModal] = useState(false)\r\n    const isInvalid = birthday.year && (birthday.year < 2016)\r\n\r\n\r\n    const changeText = (e) => {\r\n        const { title, value } = e.target\r\n        setBirthday(prevBirthday => {\r\n            return (\r\n                {\r\n                    ...prevBirthday,\r\n                    [title]: value\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    const navigate = useNavigate()\r\n    \r\n    const nextPage = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { month, day, year } = birthday\r\n\r\n        setUserData(prevUserData => {\r\n            return (\r\n                {\r\n                    ...prevUserData,\r\n                    birthday: {\r\n                        month: month ? month : 'january',\r\n                        day:  day ? day : 1,\r\n                        year: year ? year : 2022,\r\n                    },\r\n                    imageUrl: \"\"\r\n                }\r\n            )\r\n        })\r\n        setPage(3)\r\n        \r\n    }\r\n\r\n    const prevPage = (e) => {\r\n        e.preventDefault()\r\n        console.log(1)\r\n        setPage(prevPage => prevPage - 1)\r\n    }\r\n\r\n    const openModal = useCallback(() => {\r\n        setActiveModal(true)\r\n    }, [])\r\n\r\n\r\n    const classNameSection = 'rounded px-2 py-1 w-full border mb-5 outline-none bg-transparent cursor-pointer border-slate-400 h-10 text-slate-600 focus:border-transparent focus:text-black'\r\n    const classNameSection2 = {\r\n        appearance: 'none',\r\n        backgroundImage: `url(../images/down-arrow.png)`,\r\n        backgroundSize: '12px 12px',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'top 14px right 8px',\r\n        opacity: '0.5',\r\n        fontSize: '12px',\r\n    }\r\n\r\n    const arrayMonths = ['january', 'febuary', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december']\r\n    const dayDependOnMonth = (birthday.month === \"january\" || birthday.month === \"march\" || birthday.month === \"may\" ||\r\n        birthday.month === \"july\" || birthday.month === \"august\" || birthday.month === \"october\" || birthday.month === \"december\") ? 31 :\r\n        (birthday.month === \"april\" || birthday.month === \"june\" || birthday.month === \"september\" || birthday.month === \"november\") ? 30 : (!(birthday.year % 4) ? 29 : 28)\r\n\r\n    const arrayDaysDependOnMonth = Array.from({ length: dayDependOnMonth }, (v, k) => k + 1)\r\n    const arrayOfYears = Array.from({ length: 105 }, (v, k) => 2022 - k)\r\n\r\n\r\n    //Розглянути випадок високосного року\r\n    const mapArrayMonths = useMemo(() => arrayMonths.map(elem => <option key={nanoid()} className='bg-white m-0 p-0' value={elem} required title={elem}>{elem}</option>), [arrayMonths])\r\n    const mapArrayDays = useMemo(() => arrayDaysDependOnMonth.map(elem => <option key={nanoid()} className='bg-white m-0 p-0' required value={elem} title={elem}>{elem}</option>), [arrayDaysDependOnMonth])\r\n    const mapArrayYears = useMemo(() => arrayOfYears.map(elem => <option key={nanoid()} className='bg-white m-0 p-0' required value={elem} title={elem}>{elem}</option>), [arrayOfYears])\r\n    return (\r\n        <div className=\"flex items-center mx-auto h-screen max-w-xs\">\r\n            <div className=\"flex flex-col\">\r\n                <div className=\"flex flex-col p-7 items-center border bg-white mb-5\">\r\n                    <div className=\"flex justify-center w-full\">\r\n                        <img src={process.env.PUBLIC_URL + \"/images/birthday-auth.png\"} className=\"mt-2 mb-4 w-2/4\" />\r\n                    </div>\r\n                    <p className=\"text-base font-semibold mb-5\">Chosse your birthday</p>\r\n                    <p className=\"text-sm text-center\">This information will not be displayed in your public profile.</p>\r\n                    <p\r\n                        className=\"text-sm text-center cursor-pointer text-sky-500 mb-3\"\r\n                        onClick={openModal}\r\n                    >\r\n                        Why you should indicate your birthday?\r\n                    </p>\r\n                    <Modal\r\n                        activeModal={activeModal}\r\n                        setActiveModal={setActiveModal}\r\n                        textTitle=\"Birthdays\"\r\n                        styleBlock = 'bg-white w-1/5 rounded-xl duration-300 '\r\n                    >\r\n                        <img src={process.env.PUBLIC_URL + \"/images/birthday-auth.png\"} className=\"mt-4 mb-4 w-1/3 mr-auto ml-auto\" />\r\n                        <p className=\"text-center text-xl font-semibold\">Birthdays in instagram</p>\r\n                        <p className=\"px-10 text-center mt-3 text-sm mb-5\">\r\n                            Birthday information helps you improve the features and advertising you see,\r\n                            and helps keep the Instagram community safe. You can view the birthday\r\n                            in the section with personal information in the account settings.\r\n                        </p>\r\n\r\n                        {/* <div className={`w-full border-t relative`}>\r\n                            <button className=\"w-full\" type=\"button\" onClick={() => navigate(ROUTES.NOT_FOUND)}>\r\n                                <p className=\"text-center font-semibold p-2 text-blue-500 cursor-pointer text-sm w-full\">SOme In</p>\r\n                            </button>\r\n                        </div> */}\r\n\r\n                    </Modal>\r\n\r\n                    <form method=\"POST\" className=\"w-full\">\r\n                        <div className=\"w-full flex px-5 text-base\">\r\n                            <select style={classNameSection2} className={`${classNameSection} mr-2 w-24`} value={birthday.month} title=\"month\" onChange={(e) => changeText(e)}>\r\n                                {mapArrayMonths}\r\n                            </select>\r\n                            <select style={classNameSection2} className={`${classNameSection} mr-2 w-14`} value={birthday.day} title=\"day\" onChange={(e) => changeText(e)}>\r\n                                {mapArrayDays}\r\n                            </select>\r\n                            <select style={classNameSection2} className={`${classNameSection} w-[4.5rem]`} value={birthday.year} title=\"year\" onChange={(e) => changeText(e)}>\r\n                                {mapArrayYears}\r\n                            </select>\r\n                        </div>\r\n\r\n                        {!isInvalid && <p className=\"text-xs text-center text-slate-500 mb-4\">Choose your birth</p>}\r\n\r\n                        <p className=\"text-xs text-center mb-5 text-slate-500\">Specify your birthday, even if this account is for a company, pet, etc.</p>\r\n                        <button\r\n                            disabled={!isInvalid}\r\n                            onClick={(e) => nextPage(e)}\r\n                            type=\"submit\"\r\n                            className={`text-white w-full rounded h-8 font-semibold ${isInvalid ? 'bg-blue-500 cursor-pointer' : 'bg-blue-200 cursor-not-allowed'}`}\r\n                        >\r\n                            Next\r\n                        </button>\r\n                        <div className=\"flex justify-center\">\r\n                            <button\r\n                                onClick={(e) => prevPage(e)}\r\n                                type=\"button\"\r\n                                className='text-blue-500 font-semibold cursor-pointer mt-2'\r\n                            >\r\n                                Back\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"w-full border flex items-center justify-center p-5\">\r\n                    <p className=\"mr-1\">\r\n                        Already have an account?\r\n                    </p>\r\n                    <button className=\"font-bold\" type=\"button\" onClick={() => navigate(ROUTES.SIGN_IN)}>Log In</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(SignUpSecond)","import React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport SignUpFirst from \"./SignUpPages/SignUpFirst\";\r\nimport SignUpSecond from \"./SignUpPages/SignUpSecond\";\r\nimport { auth, db } from \"../../firebase/firebase\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\n\r\nconst SignUp = () => {\r\n\r\n    const [userData, setUserData] = useState({})\r\n    const [page, setPage] = useState(0)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const signUp = () => {\r\n        const { email, password } = userData\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(() => {\r\n                const currentUser = auth.currentUser\r\n                const userRef = doc(db, 'users', currentUser.uid)\r\n                const userObj = {\r\n                    ...userData,\r\n                    uid: currentUser.uid,\r\n                    followers: [],\r\n                    following: [],\r\n                    posts: [],\r\n                    recentVisitedUsers: [],\r\n                    savedPosts: [],\r\n                    taggedPosts: [],\r\n                }\r\n                setDoc(userRef, userObj)\r\n                navigate(\"/sign-in\")\r\n            })\r\n            .catch(someError => {\r\n                console.log(someError.message)\r\n                navigate(\"/sign-up\")\r\n                setPage(0)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {page === 0 &&\r\n                <SignUpFirst\r\n                    setUserData={setUserData}\r\n                    setPage={setPage}\r\n                />\r\n            }\r\n            {page === 1 &&\r\n                <SignUpSecond\r\n                    setUserData={setUserData}\r\n                    setPage={setPage}\r\n                />\r\n            }\r\n            {page === 2 &&\r\n                <SignUpFirst\r\n                    setUserData={setUserData}\r\n                    setPage={setPage}\r\n                    userData={userData}\r\n                />\r\n            }\r\n            {page === 3 && signUp()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SignUp)\r\n\r\n\r\n\r\n\r\n        // getDocs(collection(db, \"users\"))\r\n        //     .then(users => {\r\n        //         users.forEach(user => {\r\n        //             const nameOfUser = user.data().displayName\r\n        //             console.log(nameOfUser)\r\n        //             if(name === nameOfUser) {\r\n        //                 setIsNameAvailible(false)\r\n        //                 console.log(\"This name isnt available\")\r\n        //                 setTextForm(\r\n        //                     {\r\n        //                         displayName: '',\r\n        //                         name: '',\r\n        //                         email: '',\r\n        //                         password: ''\r\n        //                     }\r\n        //                 )\r\n        //             }\r\n        //         })\r\n        //         return isNameAvailable\r\n        //     })\r\n        //     .then(data => console.log(data))\r\n        //     .catch(error => console.log(error.message))\r\n\r\n\r\n        //const boolean = await isNameAvailable(name)\r\n        //console.log(boolean)\r\n        // if(boolean) return\r\n"],"names":["SignUpFirst","setUserData","setPage","useState","displayName","name","email","password","textForm","setTextForm","error","setError","navigate","useNavigate","changeText","e","target","value","prevTextForm","checkEmail","getDocs","collection","db","then","users","forEach","user","emailCurrentUser","data","console","log","isInvalid","length","className","src","process","method","type","placeholder","onChange","disabled","onClick","preventDefault","prevUserData","nextPage","ROUTES","React","SignUpSecond","userData","month","day","year","birthday","setBirthday","activeModal","setActiveModal","title","prevBirthday","openModal","useCallback","classNameSection","classNameSection2","appearance","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","opacity","fontSize","arrayMonths","dayDependOnMonth","arrayDaysDependOnMonth","Array","from","v","k","arrayOfYears","mapArrayMonths","useMemo","map","elem","required","nanoid","mapArrayDays","mapArrayYears","Modal","textTitle","styleBlock","style","imageUrl","prevPage","SignUp","page","createUserWithEmailAndPassword","auth","currentUser","userRef","doc","uid","userObj","followers","following","posts","recentVisitedUsers","savedPosts","taggedPosts","setDoc","catch","someError","message","signUp"],"sourceRoot":""}