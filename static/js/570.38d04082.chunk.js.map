{"version":3,"file":"static/js/570.38d04082.chunk.js","mappings":"gRAWMA,EAAS,WAEX,OAAgCC,EAAAA,EAAAA,UAC5B,CACIC,MAAO,GACPC,SAAU,KAHlB,eAAOC,EAAP,KAAiBC,EAAjB,KAMMC,GAAcC,EAAAA,EAAAA,KACdC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BR,EAAAA,EAAAA,YAA1B,eAAOS,EAAP,KACMC,GADN,MACiBC,EAAAA,EAAAA,OAEXC,EAAiB,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdZ,GAAY,SAAAa,GACR,OAAO,QAAC,UAEGA,GAFX,cAGSF,EAAOC,QAWlBE,EAAM,mCAAG,WAAOL,GAAP,oFACXA,EAAEM,iBACMlB,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAFJ,UAGckB,EAAAA,EAAAA,IAA2BC,EAAAA,GAAMpB,EAAOC,GAHtD,cAGLoB,EAHK,iBAIWC,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASH,EAAWI,KAAKC,MAJnD,OAILC,EAJK,OAMXrB,GAASsB,EAAAA,EAAAA,GAAQD,EAAQE,SAEzBpB,EAAS,KAETqB,QAAQC,IAAI,WAVD,4CAAH,sDAaZ,OACI,iBAAKC,UAAS,2EAAd,UAEQ5B,EAAY6B,WAAa,OACzB,gBAAKD,UAAU,aAAf,UACI,gBAAKE,IAAKC,sDAAkEC,IAAI,4BAA4BJ,UAAU,cAG9H,iBAAKA,UAAW,+BAAhB,WACI,iBAAKA,UAAU,sDAAf,WACI,gBAAKA,UAAU,6BAAf,UACI,gBAAKE,IAAKC,sCAAkDH,UAAU,sBAEzExB,IAAS,eAAGwB,UAAU,4BAAb,cAA2CxB,EAAM6B,YAC3D,kBAAMC,OAAO,OAAb,WACI,kBACIvB,MAAOb,EAASF,MAChBc,KAAK,QACLyB,KAAK,QACLP,UAAU,6DACVQ,YAAY,gBACZC,SAAU,SAAC7B,GAAD,OAAOD,EAAeC,OAEpC,kBACIG,MAAOb,EAASD,SAChBa,KAAK,WACLyB,KAAK,WACLP,UAAU,6DACVQ,YAAY,WACZC,SAAU,SAAC7B,GAAD,OAAOD,EAAeC,OAEpC,mBACI2B,KAAK,SACLP,UAAU,sDACVU,QAAS,SAAC9B,GAAD,OAAOK,EAAOL,IAH3B,2BAUR,iBAAKoB,UAAU,qDAAf,WACI,cAAGA,UAAU,OAAb,qCAGA,mBAAQA,UAAU,YAAYO,KAAK,SAASG,QA/DnC,WACrBZ,QAAQC,IAAI,GACZtB,EAASkC,EAAAA,KA6DG,+BAOpB,UAAeC,EAAAA,KAAW9C","sources":["pages/SignIn/SignIn.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as ROUTES from '../../constants/pagesLinks'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { setUser } from \"../../redux/actions/userActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useWindowWidth from \"../../hooks/useWindowWidth\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"../../firebase/firebase\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n    const [textForm, setTextForm] = useState(\r\n        {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    )\r\n    const windowWidth = useWindowWidth()\r\n    const dispatch = useDispatch()\r\n    const [error, setError] = useState()\r\n    const navigate = useNavigate()\r\n\r\n    const changetextForm = (e) => {\r\n        const { name, value } = e.target\r\n        setTextForm(prevTextForm => {\r\n            return (\r\n                {\r\n                    ...prevTextForm,\r\n                    [name]: value\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const navigateToSignUp = () => {\r\n        console.log(1)\r\n        navigate(ROUTES.SIGN_UP)\r\n    }\r\n\r\n    const signIn = async (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = textForm\r\n        const loggedUser = await signInWithEmailAndPassword(auth, email, password)\r\n        const docUser = await getDoc(doc(db, 'users', loggedUser.user.uid))\r\n\r\n        dispatch(setUser(docUser.data()))\r\n\r\n        navigate('/')\r\n\r\n        console.log('sign-in')\r\n\r\n    }\r\n    return (\r\n        <div className={`flex max-w-screen-lg items-center mx-auto h-screen w-full justify-center`}>\r\n            {\r\n                windowWidth.innerWidth > 1100 &&\r\n                <div className=\"flex w-2/3\">\r\n                    <img src={process.env.PUBLIC_URL + \"/images/backgroundPhonesInstagram.png\"} alt=\"iPhone with Instagram app\" className=\"h-full\" />\r\n                </div>\r\n            }\r\n            <div className={'flex w-[340px] flex-col px-3'}>\r\n                <div className=\"flex flex-col p-7 items-center border bg-white mb-5\" >\r\n                    <div className=\"flex justify-center w-full\">\r\n                        <img src={process.env.PUBLIC_URL + \"/images/instagram.png\"} className=\"mt-2 mb-4 w-2/4\" />\r\n                    </div>\r\n                    {error && <p className=\"text-sm text-red-500 mb-5\"> {error.message}</p>}\r\n                    <form method=\"POST\">\r\n                        <input\r\n                            value={textForm.email}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-2 text-sm outline-none \"\r\n                            placeholder=\"Email address\"\r\n                            onChange={(e) => changetextForm(e)}\r\n                        />\r\n                        <input\r\n                            value={textForm.password}\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            className=\"rounded px-4 py-3 w-full border mb-5 text-sm outline-none \"\r\n                            placeholder=\"Password\"\r\n                            onChange={(e) => changetextForm(e)}\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"bg-blue-500 text-white w-full rounded h-8 font-bold\"\r\n                            onClick={(e) => signIn(e)}\r\n                        >\r\n                            Log In\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"w-full border flex items-center justify-center p-5\">\r\n                    <p className=\"mr-1\">\r\n                        Don't have an account?\r\n                    </p>\r\n                    <button className=\"font-bold\" type=\"button\" onClick={navigateToSignUp}>Sign up</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(SignIn)"],"names":["SignIn","useState","email","password","textForm","setTextForm","windowWidth","useWindowWidth","dispatch","useDispatch","error","navigate","useNavigate","changetextForm","e","target","name","value","prevTextForm","signIn","preventDefault","signInWithEmailAndPassword","auth","loggedUser","getDoc","doc","db","user","uid","docUser","setUser","data","console","log","className","innerWidth","src","process","alt","message","method","type","placeholder","onChange","onClick","ROUTES","React"],"sourceRoot":""}